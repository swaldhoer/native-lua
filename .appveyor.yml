version: 5.3.4.{build}

image:
  - Visual Studio 2017
  - Ubuntu

stack: python 3.7.0

skip_commits:
  files:
    - .travis.yml

init:
  - git config --global core.autocrlf input

# install:
#   - python --version
#   - ps: |
#       if ($isWindows) {
#         $rmpath = "Docker", "SQL", "Mercurial", "Subversion", "Maven", "CMake", "nodejs", "nunit", "nuget", "java", "xunit", "go", "python", "Amazon", "ruby", "perl", "Azur", "Webdriver", "Coverity", "Octopus", "erl9", "dotnet", "iojs", "curl", "Yarn", "chocolatey", "npm"
#         foreach ($i in $rmpath) {
#           $env:path = ($env:path -split ";").Where({!($_ -like "*$i*")}) -join ";"
#         }
#       }
#   - cmd: set PATH=C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin;%PATH%
#   - ps: |
#       if ($isWindows) {
#         Write-Host New `$env:Path
#         Write-Host ($env:Path).Replace(';',"`n")
#         }
#   - cmd: C:\Miniconda37-x64\Scripts\activate
#   - cmd: conda install pylint flake8 vs2017_win-64 -c anaconda -y -q
#   - cmd: python --version
#   - sh: sudo ln -s /usr/bin/clang-6.0 /usr/bin/clang
#   - sh: clang --version

# before_build:
#   # ensure that only well formated wscripts are checked in
#   - cmd: python waf --help
#   - cmd: flake8
#   - cmd: pylint wscript
#   - cmd: pylint lua\wscript

build_script:
  # # Windows [
  # - cmd: python waf configure --include-tests
  # - cmd: dir build
  # # msvc [
  # - cmd: python waf build_msvc
  # - cmd: python waf install_msvc
  # - cmd: python waf uninstall_msvc
  # - cmd: python waf clean_msvc
  # # msvc ]
  # # gcc [
  # - cmd: python waf build_gcc
  # - cmd: python waf install_gcc
  # - cmd: python waf uninstall_gcc
  # - cmd: python waf clean_gcc
  # # gcc ]
  # # clang [
  # - cmd: python waf build_clang
  # - cmd: python waf install_clang
  # - cmd: python waf uninstall_clang
  # - cmd: python waf clean_clang
  # # clang ]
  # - cmd: python waf distclean
  # - cmd: deactivate
  # cygwin [
  # gcc [
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'pwd && python3 --version'
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'cd native-lua && python3 waf configure --include-tests'
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'cd native-lua && python3 waf build_gcc'
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'cd native-lua && python3 waf install_gcc'
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'cd native-lua/build/gcc/lua/lua-5.3.4-tests && lua -e"_U=true" all.lua'
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'cd native-lua/build/gcc/lua/lua-5.3.4-tests && lua all.lua'
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'cd native-lua && python3 waf uninstall_gcc'
  - cmd: C:\cygwin64\bin\bash.exe -l -c 'cd native-lua && python3 waf distclean'
  # gcc ]
  # cygwin ]
  # # Windows ]
  # # Linux [
  # # without ltests
  # - sh: python waf configure --include-tests
  # # gcc [
  # - sh: python waf build_gcc
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf install_gcc'
  # - sh: pushd build/gcc/lua/lua-5.3.4-tests
  # - sh: lua -e"_U=true" all.lua
  # #- sh: lua all.lua
  # - sh: popd
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf uninstall_gcc'
  # - sh: python waf clean_gcc
  # # gcc ]
  # # clang [
  # - sh: python waf build_clang
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf install_clang'
  # - sh: pushd build/clang/lua/lua-5.3.4-tests
  # - sh: lua -e"_U=true" all.lua
  # #- sh: lua all.lua
  # - sh: popd
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf uninstall_clang'
  # - sh: python waf clean_clang
  # # clang ]
  # - sh: python waf distclean
  # # including ltests
  # - sh: python waf configure --ltests --include-tests
  # # gcc [
  # - sh: python waf build_gcc
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf install_gcc'
  # - sh: pushd build/gcc/lua/lua-5.3.4-tests
  # - sh: lua -e"_U=true" all.lua
  # #- sh: lua all.lua
  # - sh: popd
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf uninstall_gcc'
  # - sh: python waf clean_gcc
  # # gcc ]
  # # clang [
  # - sh: python waf build_clang
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf install_clang'
  # - sh: pushd build/clang/lua/lua-5.3.4-tests
  # - sh: lua -e"_U=true" all.lua
  # #- sh: lua all.lua
  # - sh: popd
  # - sh: sudo bash -c 'source /home/appveyor/venv3.7.0/bin/activate && python waf uninstall_clang'
  # - sh: python waf clean_clang
  # # clang ]
  # - sh: python waf distclean
  # # Linux ]
