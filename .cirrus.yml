task:
  allow_failures: $CIRRUS_OS == 'darwin'
  skip_notifications: $CIRRUS_OS == 'darwin'
  matrix:
    - container:
        matrix:
          image: python:2.7
          image: python:3.7
      install_script:
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
        - apt-get update
        - apt-get install -y dialog
        - apt-get install -y software-properties-common
        - apt-add-repository "deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-8 main"
        - apt-get update
        - apt-get -y upgrade
        - apt-get install -y build-essential
        - apt-get install -y clang-8 lld-8
        - update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 100
        - pip install sphinx_rtd_theme
        - pip install pathlib

    - freebsd_instance:
        matrix:
          image: freebsd-12-0-release-amd64
      freebsd_install_script:
        - pkg update -f
        - env ASSUME_ALWAYS_YES=YES pkg bootstrap -f
        - env ASSUME_ALWAYS_YES=YES pkg upgrade pkg
        - env ASSUME_ALWAYS_YES=YES pkg install lang/gcc
        - env ASSUME_ALWAYS_YES=YES pkg install readline
        - env ASSUME_ALWAYS_YES=YES pkg install bash
        - env ASSUME_ALWAYS_YES=YES pkg install py27-pip
        - pip-2.7 install sphinx_rtd_theme
        - pip-2.7 install pathlib
      freebsd_setup_script:
        - chsh -s /usr/local/bin/bash

#    - osx_instance:
#        image: mojave-xcode-10.2
#      env:
#        PATH: /usr/local/opt/python/libexec/bin:${PATH}
#      macos_setup_script:
#        - brew install python3
#        - pip install sphinx_rtd_theme -q

  script:
    - python --version
    # basic configuration
    - python waf configure -v
    # documentation build
    - python waf build_doc
    - python waf clean_doc
    - python waf distclean
    # configuration
    - python waf configure --include-tests
    # gcc [
    - python waf build_gcc
    - python waf install_gcc
    - pushd build/gcc/tests
    - lua -e"_U=true" all.lua
    #- lua all.lua
    - popd
    - python waf uninstall_gcc
    - python waf clean_gcc
    # gcc ]
    - python waf distclean
    # including ltests
    - python waf configure --ltests --include-tests
    # gcc [
    - python waf build_gcc
    - python waf install_gcc
    - pushd build/gcc/tests
    - lua -e"_U=true" all.lua
    #- lua all.lua
    - popd
    - python waf uninstall_gcc
    - python waf clean_gcc
    # gcc ]
    # configuration
    - python waf configure --include-tests
    # clang [
    - python waf build_clang
    - python waf install_clang
    - pushd build/clang/tests
    - lua -e"_U=true" all.lua
    #- lua all.lua
    - popd
    - python waf uninstall_clang
    - python waf clean_clang
    # clang ]
    - python waf distclean
    # including ltests
    - python waf configure --ltests --include-tests
    # clang [
    - python waf build_clang
    - python waf install_clang
    - pushd build/clang/tests
    - lua -e"_U=true" all.lua
    #- lua all.lua
    - popd
    - python waf uninstall_clang
    - python waf clean_clang
    # clang ]
    # test script
    - python scripts/run_test.py -c gcc -c clang --simple-test
    - python scripts/run_test.py -c gcc -c clang --simple-test --ltests
